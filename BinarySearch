package sortingAndSearching;

//Author: Keval Goradia

public class BinarySearch {

	public static int binarySearchIterative(int[] array, int element) {
		int low = 0;
		int high = array.length - 1;

		while (!(low > high)) {
			int mid = low + ((high - low) / 2);
			if (element == array[mid]) {
				return mid;
			} else if (element < array[mid]) {
				high = mid - 1;
			} else {
				low = mid + 1;
			}
		}
		return -1;
	}

	public static int binarySearchRecursive(int[] array, int element, int startIndex, int endIndex) {
		int mid = startIndex + (endIndex - startIndex) / 2;
		if (!(startIndex > endIndex)) {
			if (element == array[mid]) {
				return mid;
			} else if (element < array[mid]) {
				return binarySearchRecursive(array, element, startIndex, mid - 1);
			} else {
				return binarySearchRecursive(array, element, mid + 1, endIndex);
			}
		}
		return -1;
	}

}
